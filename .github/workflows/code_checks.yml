name: code checks
permissions:
  contents: read
  pull-requests: write

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/code_checks.yml
      - '**.rs'
      - Cargo.lock
      - Cargo.toml
  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/code_checks.yml
      - '**.rs'
      - Cargo.lock
      - Cargo.toml

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -D warnings

jobs:
  check:
    name: Basic Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
      
      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      
      - name: Check formatting
        run: cargo fmt -- --check
      
      - name: Check build
        run: cargo check --all-features

      - name: Check clippy
        run: cargo clippy --all-targets --all-features

  test:
    name: Coverage Tests
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          components: llvm-tools-preview
      
      - name: Install llvm-cov
        run: cargo install cargo-llvm-cov
      
      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Generate Coverage
        run: |
          cargo llvm-cov --verbose \
            --all-features \
            --workspace \
            --ignore-filename-regex "src/bin/*" \
            --lcov \
            --output-path lcov.info
            
      - name: Upload to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: lcov.info
          verbose: true
